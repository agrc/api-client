name: deploy
on:
  release:
    types: [published]
jobs:
  macos:
    name: Draft Release
    runs-on: macos-latest
    environment:
      name: prod
    steps:
      - name: Set up code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
          cache: npm

      - name: Bump version
        id: bump-version
        run: |
          TAG=$(gh release view --json tagName --jq ".tagName")
          npm version $TAG --no-git-tag-version

      - name: Set up signing certificates
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATE }}
          p12-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}

      - name: Install dependencies
        run: npm ci

      - name: Build, Package, & Release
        run: npm run publish
        env:
          APPLE_IDENTITY: ${{ secrets.APPLE_IDENTITY }}
          APPLE_BUNDLE_ID: ${{ secrets.APPLE_BUNDLE_ID }}
          APPLE_USER_ID: ${{ secrets.APPLE_USER_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          WINDOWS_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  windows:
    name: Draft Release
    runs-on: windows-latest
    environment:
      name: prod
    steps:
      - name: Set up code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
          cache: npm

      - name: Bump version
        id: bump-version
        run: |
          TAG=$(gh release view --json tagName --jq ".tagName")
          npm version $TAG --no-git-tag-version

      - name: Install dependencies
        run: npm ci

      - name: Build, Package, & Release
        run: npm run publish
        env:
          WINDOWS_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
