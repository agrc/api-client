name: Release Events

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

permissions:
  id-token: write
  deployments: write
  contents: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  deploy-macos:
    name: Publish macOS app
    runs-on: macos-latest
    environment:
      name: prod
    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: ‚éî Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: üêç Set up python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: üßë‚Äçüéì Set up signing certificates
        uses: apple-actions/import-codesign-certs@v5
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATE }}
          p12-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}

      - name: üíª Set up app DMG
        run: |
          python3 -m pip install setuptools
          npm install -g appdmg@0.6.6

      - name: üì• Install dependencies
        run: npm ci

      - name: üöÄ Build, Package, & Release
        run: npm run publish -- --arch=universal
        env:
          APPLE_IDENTITY: ${{ secrets.APPLE_IDENTITY }}
          APPLE_USER_ID: ${{ secrets.APPLE_USER_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VITE_IS_BETA: ${{ github.event.release.prerelease == true }}

  deploy-windows:
    name: Publish windows app
    runs-on: windows-latest
    environment:
      name: prod
    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: ‚éî Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: üì• Install dependencies
        run: npm ci

      - name: üèóÔ∏è Install Google Cloud KMS Provider
        shell: pwsh
        run: .\build\install-kms.ps1

      - name: üóùÔ∏è Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          access_token_scopes: 'openid, https://www.googleapis.com/auth/cloud-platform'
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          create_credentials_file: true

      - name: üöÄ Build, Package, & Release
        run: npm run publish
        env:
          GCP_KEY_PATH: ${{ secrets.GCP_KEY_PATH }}
          CERTIFICATE_SHA1: ${{ vars.CERTIFICATE_SHA1 }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VITE_IS_BETA: ${{ github.event.release.prerelease == true }}

  change-management:
    name: Change management
    needs: [deploy-macos, deploy-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: üîî Create deployment notification
        uses: agrc/service-now-worknote-action@v1
        with:
          repo-token: ${{ github.token }}
          username: ${{ secrets.SN_USERNAME }}
          password: ${{ secrets.SN_PASSWORD }}
          instance-name: ${{ secrets.SN_INSTANCE }}
          table-name: ${{ secrets.SN_TABLE }}
          system-id: ${{ secrets.SN_SYS_ID }}

      - name: üí¨ Comment on issues in release
        uses: agrc/release-issue-notifications-action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
